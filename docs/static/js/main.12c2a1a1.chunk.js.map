{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcat","useState","NewCat","setNewCat","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","handleInputValue","getGifs","cat","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","tittle","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","cargando","state","setstate","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","GifExpertApp","divRoot","document","querySelector","ReactDom","render"],"mappings":"uLAGaA,EAAc,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACzB,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAcA,OACI,sBAAMC,SATU,SAACC,GACjBA,EAAEC,iBACCJ,EAAOK,OAAOC,OAAO,IACpBR,GAAO,SAAAS,GAAI,OAAGP,GAAH,mBAAaO,OACxBN,EAAU,MAKd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAAU,SAACP,GAAD,OAjBE,SAACA,GACrBF,EAAUE,EAAEQ,OAAOF,OAgBIG,CAAiBT,S,+BCvBnCU,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DAEZC,EAFY,iDAEkCC,UAAUH,GAF5C,8DAGII,MAAMF,GAHV,cAGZG,EAHY,gBAIEA,EAAUC,OAJZ,uBAIXC,EAJW,EAIXA,KAEDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACrB,MAAO,CACHC,GAAID,EAAIC,GACRC,OAAOF,EAAIG,MACXX,IAAG,UAAEQ,EAAII,cAAN,aAAE,EAAYC,iBAAiBb,QAVxB,kBAcXM,GAdW,4CAAF,sDCqBLQ,EAnBK,SAAC,GAAqB,IAApBL,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,OAAOV,EAAS,EAATA,IAI5B,OAHKU,IACDA,EAAO,aAGP,sBAAKK,UAAU,0CAAf,UACI,6BAAKL,IADT,IACsB,uBAClB,qBAAKM,IAAKhB,EAAKiB,IAAKR,QC0BjBS,EA5BC,SAAC,GAAW,IAAVpB,EAAS,EAATA,IACd,ECJwB,SAACA,GACzB,MAA0Bf,mBAAS,CAE/BsB,KAAK,GACLc,UAAS,IAHb,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAjBAC,qBAAW,WACPzB,EAAQC,GACPyB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLhB,KAAKmB,EACLL,UAAS,IAEbO,QAAQC,IAAIH,KACb,UAGR,CAAC1B,IAKGsB,EDpBuBQ,CAAa9B,GAA/Bc,EAAZ,EAAOP,KAAac,EAApB,EAAoBA,SAEpB,OACI,qCACA,qBAAIJ,UAAU,wCAAd,cAAwDjB,EAAxD,OACA,oBAAIiB,UAAU,0CAAd,SAAyDI,GAAY,kBACrE,qBAAKJ,UAAU,YAAf,SAIKH,EAAOL,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEhBToB,EAAe,WAKzB,MAAuB9C,mBAAS,CAAC,gBAAjC,mBAAOQ,EAAP,KAAaT,EAAb,KAUH,OAAO,qCACH,8CACA,uBACA,cAAC,EAAD,CAAaA,OAAQA,IACrB,uBAEA,6BAESS,EAAKgB,KAAI,SAACT,GAAD,OAAQ,cAAC,EAAD,CAEdA,IAAKA,GADAA,YClBfgC,G,MAAQC,SAASC,cAAc,UAGrCC,IAASC,OAAO,cAAC,EAAD,IAAgBJ,K","file":"static/js/main.12c2a1a1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setcat})=> {\r\n    const [NewCat, setNewCat] = useState('');\r\n\r\n    const handleInputValue=((e)=>{\r\n        setNewCat(e.target.value);\r\n    })\r\n    \r\n    const hanldeSubmit =(e)=>{\r\n        e.preventDefault();\r\n        if(NewCat.trim().length>2){\r\n            setcat(cats=>[NewCat,...cats]);\r\n            setNewCat('');\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit={hanldeSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={NewCat}\r\n                onChange={(e)=>handleInputValue(e)}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setcat: PropTypes.func.isRequired\r\n}\r\n\r\n","export const getGifs= async(cat)=>{\r\n    \r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(cat)}&limit=6&api_key=mkjv492kRXEoQ4bd59PZfIfiMYelNh9o`\r\n    const respuesta=await fetch(url);\r\n    const {data}= await respuesta.json();\r\n\r\n    const gifs=data.map(img=>{\r\n        return {\r\n            id: img.id,\r\n            tittle:img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({id,tittle,url}) => {\r\n    if (!tittle){\r\n        tittle='no tittle'\r\n    } \r\n    return (\r\n        <div className=\"card animate__animated animate__flipInX\">\r\n            <h4>{tittle}</h4> <hr/>\r\n            <img src={url} alt={id}/>\r\n                   \r\n        </div>\r\n    )\r\n}\r\n/*\r\n    <li key={id}>Titulo:{tittle} <br/>\r\n                    <img src={url}/>\r\n                    <hr />\r\n                    </li> */\r\n\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nimport GifGridItem from './GifGridItem';\r\n\r\n\r\n\r\nconst GifGrid = ({cat}) => {\r\n    const {data:images, cargando}=useFetchGifs(cat);     \r\n\r\n    return (\r\n        <>\r\n        <h1 className=\"animate__animated animate__backInDown\"> {cat} </h1>\r\n        <h5 className=\"salida animate__animated animate__flash\">{cargando && 'Cargando. . .'}</h5>\r\n        <div className=\"card-grid\">\r\n         \r\n\r\n         {\r\n             images.map((img)=>(\r\n             <GifGridItem \r\n             key={img.id}\r\n             {...img}\r\n             />\r\n                 ))\r\n         }\r\n        \r\n     \r\n </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default GifGrid;\r\n","import {useEffect, useState} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (cat) => {\r\n    const [state, setstate] = useState({\r\n\r\n        data:[],\r\n        cargando:true,\r\n    });\r\n\r\n    useEffect (()=>{\r\n        getGifs(cat)\r\n        .then(imgs=>{\r\n            setTimeout(() => {\r\n                setstate({\r\n                    data:imgs,\r\n                    cargando:false,\r\n                })\r\n                console.log(imgs)\r\n            }, 3000);\r\n            \r\n        })\r\n    }, [cat])\r\n\r\n\r\n   \r\n    \r\n    return state;\r\n}\r\n","import React, {useState} from \"react\"\r\nimport { AddCategory } from \"./components/AddCategory\"\r\nimport GifGrid from \"./components/GifGrid\"\r\n\r\nexport const GifExpertApp =(()=>{\r\n\r\n   \r\n  // const cats=['One Punch','Inspector','Dragon Ball']\r\n   \r\n   const [cats, setcat] = useState(['Dragon Ball'])\r\n    \r\n   /* const handleAdd=(e)=>{\r\n        setcat(cats=>[...cats,'nuevo']);\r\n    }\r\n\r\n\r\n     <button onClick={handleAdd}> Agregar </button>\r\n    */\r\n\r\nreturn <>\r\n    <h2>GifExpertApp</h2>\r\n    <hr />\r\n    <AddCategory setcat={setcat}/>\r\n    <hr />\r\n\r\n    <ol>\r\n        {\r\n             cats.map((cat)=>(<GifGrid\r\n                key={cat}\r\n                cat={cat}/>))\r\n        }\r\n    </ol>\r\n\r\n    </>\r\n})","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport { GifExpertApp } from \"./GifExpertApp\";\r\n//import CounterApp from \"./CounterApp\";\r\n\r\n//import PrimeraApp from \"./PrimerApp\";\r\n\r\nimport './index.css';\r\n\r\n\r\nconst divRoot=document.querySelector('#root');\r\n\r\n//ReactDom.render(<PrimeraApp saludo=\"Im riccardo\"/>,divRoot);\r\nReactDom.render(<GifExpertApp/>,divRoot);\r\n"],"sourceRoot":""}